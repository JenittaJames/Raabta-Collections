<%- include('../partials/admin/header') %>

<style>
    .preview-box {
        margin-bottom: 15px;
    }
    .preview-placeholder {
        border: 2px dashed #ccc;
        height: 200px;
        display: flex;
        align-items: center;
        justify-content: center;
        background: #f8f9fa;
    }
    .preview-image {
        width: 100%;
        height: 200px;
        object-fit: cover;
        border: 1px solid #ddd;
    }
    .form-control.error {
        border-color: #dc3545;
    }
    .text-danger {
        font-size: 0.875em;
        margin-top: 5px;
    }
</style>

<section class="content-main">
    <div class="content-header">
        <div>
            <h1 class="content-title card-title">Edit Product</h1>
        </div>
    </div>
    <div class="card-body">
        <div class="row">
            <div class="col-md-8">
                <form 
                    id="editProductForm" 
                    method="post" 
                    action="/admin/editproduct/<%= product._id %>" 
                    enctype="application/x-www-form-urlencoded"
                >
                    <input type="hidden" name="id" value="<%= product._id %>">

                    <div class="mb-4">
                        <label for="name" class="form-label">Product Name</label>
                        <input 
                            type="text" 
                            class="form-control" 
                            id="name" 
                            name="name" 
                            value="<%= product.productName %>" 
                            required 
                        />
                        <div id="nameError" class="text-danger"></div>
                    </div>

                    <div class="mb-4">
                        <label for="description" class="form-label">Description</label>
                        <textarea 
                            class="form-control" 
                            id="description" 
                            name="description" 
                            required
                        ><%= product.description %></textarea>
                        <div id="descriptionError" class="text-danger"></div>
                    </div>

                    <div class="mb-4">
                        <label for="price" class="form-label">Price</label>
                        <input 
                            type="number" 
                            class="form-control" 
                            id="price" 
                            name="price" 
                            required 
                            value="<%= product.price %>" 
                            min="0" 
                            step="0.01"
                        />
                        <div id="priceError" class="text-danger"></div>
                    </div>

                    <div class="mb-4">
                        <label for="stock" class="form-label">Stock Quantity</label>
                        <input 
                            type="number" 
                            class="form-control" 
                            id="stock" 
                            name="stock" 
                            required 
                            value="<%= product.totalStock %>" 
                            min="0"
                        />
                        <div id="stockError" class="text-danger"></div>
                    </div>


                    <div class="mb-4">
                        <label for="category" class="form-label">Category</label>
                        <select 
                            class="form-control" 
                            id="category" 
                            name="category" 
                            required
                        >
                            <option value="">Select a category</option>
                            <% categories.forEach(function(category) { %>
                                <option value="<%= category._id %>" <%= (product.category && product.category.toString() === category._id.toString()) ? 'selected' : '' %>>
                                    <%= category.name %>
                                </option>
                            <% }); %>
                        </select>
                        <div id="categoryError" class="text-danger"></div>
                    </div>

                    <!-- Image Preview Section -->
                    <div class="mb-4">
                        <label class="form-label">Image Previews</label>
                        <div class="row" id="imagePreview">
                            <% for(let i = 0; i < 3; i++) { %>
                                <div class="col-md-4 preview-box">
                                    <% if (product.productImage && product.productImage[i]) { %>
                                        <img src="/<%= product.productImage[i] %>" class="preview-image" alt="Product Image <%= i + 1 %>">
                                    <% } else { %>
                                        <div class="preview-placeholder">
                                            <span>Image <%= i + 1 %></span>
                                        </div>
                                    <% } %>
                                </div>
                            <% } %>
                        </div>
                    </div>
                    <a href="/admin/editimage/<%= product._id %>" class="btn btn-dark">Edit Images</a>
                    <div class="d-flex justify-content-center mt-3">
                        <button type="submit" class="btn btn-dark">Update Product</button>
                    </div>  
                </form>
            </div>
        </div>
    </div>
</section>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        const form = document.getElementById('editProductForm');
        
        // Form submission handler
        form.addEventListener('submit', function(event) {
            event.preventDefault();
            if (validateForm()) {
                this.submit();
            }
        });

        // Real-time validation
        const inputs = document.querySelectorAll('.form-control');
        inputs.forEach(input => {
            input.addEventListener('input', function() {
                validateField(this);
            });
        });

        function validateField(field) {
            const errorElement = document.getElementById(field.id + 'Error');
            errorElement.innerHTML = '';
            field.classList.remove('error');

            switch(field.id) {
                case 'name':
                    const name = field.value.trim();
                    if (!name) {
                        showError(field, errorElement, 'Product name is required');
                    } else if (name.length < 2 || name.length > 100) {
                        showError(field, errorElement, 'Name must be 2-100 characters long');
                    }
                    break;

                case 'description':
                    const description = field.value.trim();
                    if (!description) {
                        showError(field, errorElement, 'Product description is required');
                    } else if (description.length < 10 || description.length > 1000) {
                        showError(field, errorElement, 'Description must be 10-1000 characters long');
                    }
                    break;

                case 'price':
                    const price = field.value;
                    if (!price || isNaN(price) || parseFloat(price) <= 0) {
                        showError(field, errorElement, 'Price must be greater than 0');
                    } else if (parseFloat(price) > 1000000) {
                        showError(field, errorElement, 'Price cannot exceed 1,000,000');
                    }
                    break;

                case 'stock':
                    const stock = field.value;
                    if (!stock || isNaN(stock) || parseInt(stock) < 0) {
                        showError(field, errorElement, 'Stock must be 0 or greater');
                    } else if (parseInt(stock) > 10000) {
                        showError(field, errorElement, 'Stock cannot exceed 10,000');
                    }
                    break;


                    case 'category':
    const category = field.value.trim();
    if (!category) {
        showError(field, errorElement, 'Please select a category');
    }
    break;
            }
        }

        function validateForm() {
            let isValid = true;
            const fields = ['name', 'description', 'price', 'stock'];
            
            fields.forEach(fieldId => {
                const field = document.getElementById(fieldId);
                validateField(field);
                if (field.classList.contains('error')) {
                    isValid = false;
                }
            });

            return isValid;
        }

        function showError(field, errorElement, message) {
            errorElement.innerHTML = message;
            field.classList.add('error');
        }
    });
</script>

<%- include('../partials/admin/footer') %>